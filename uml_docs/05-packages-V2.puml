@startuml UUPS-VendingMachine-V2_5-packages
!theme aws-orange
skinparam backgroundColor white

title UUPS-VendingMachine V2 - Package Diagram\nCode Organization Structure

' Root Package
package "UUPS-VendingMachine" {

' Smart Contracts Package
package "contracts" {
artifact "VendingMachineV1.sol" as V1Contract
artifact "VendingMachineV2.sol" as V2Contract
artifact "ProductLibrary.sol" as ProductLib

note top of V1Contract
**V1 Implementation**
Original vending machine contract
UUPS upgradeable foundation
end note

note top of V2Contract
**V2 Implementation**
Enhanced with admin interface
Analytics and reporting system
Backward compatible
end note

note right of ProductLib
**Shared Library**
Product validation utilities
Price calculation functions
Reusable across versions
end note

}

' Frontend Package
package "frontend" {

package "src" {
  
  package "components" {
    artifact "App.jsx" as App
    artifact "Header.jsx" as Header
    artifact "Catalog.jsx" as Catalog
    artifact "ProductCard.jsx" as ProductCard
    artifact "Admin.jsx" as Admin
    artifact "PurchaseHistory.jsx" as PurchaseHistory
    artifact "Footer.jsx" as Footer
    
    note bottom of Admin
    **V2 Enhancement**
    Complete admin dashboard
    Product CRUD operations
    Analytics visualization
    end note
  }
  
  package "hooks" {
    artifact "useContract.js" as Hook
    
    note right of Hook
    **Web3 Integration**
    Contract state management
    Transaction handling
    V2 admin functions
    end note
  }
  
  package "utils" {
    artifact "contract.js" as ContractUtils
    
    note left of ContractUtils
    **Contract Interface**
    ABI definitions
    Network configuration
    Helper functions
    end note
  }
}

package "public" {
  artifact "index.html" as IndexHTML
  artifact "deployed-addresses.json" as Addresses
  
  note top of Addresses
  **Deployment Config**
  Contract addresses per network
  Version tracking
  Auto-generated by scripts
  end note
}

}

' Scripts Package
package "scripts" {
artifact "deploy.js" as DeployScript
artifact "deploy-v2.js" as DeployV2Script
artifact "populate-products.js" as PopulateScript

note bottom of DeployScript
**V1 Deployment**
Initial UUPS proxy setup
Implementation deployment
Configuration bootstrap
end note

note bottom of DeployV2Script
**V2 Upgrade**
Seamless upgrade process
State preservation
New features initialization
end note

note bottom of PopulateScript
**Data Population**
CSV product import
Bulk operations
Testing data setup
end note

}

' Test Package
package "test" {
artifact "VendingMachine.test.js" as V1Tests
artifact "VendingMachine.V2.test.js" as V2Tests

note right of V1Tests
**V1 Test Suite**
Core functionality tests
UUPS proxy validation
Gas optimization tests
end note

note right of V2Tests
**V2 Test Suite**
Upgrade process tests
Admin functionality tests
Analytics system tests
Backward compatibility tests
end note

}

' Data Package
package "data" {
artifact "products.csv" as ProductsCSV

note left of ProductsCSV
**Sample Data**
Product catalog template
Development testing data
Bulk import source
end note

}

' Configuration Package
package "config" {
artifact "hardhat.config.js" as HardhatConfig
artifact "package.json" as PackageJSON
artifact ".env.example" as EnvExample

note bottom of HardhatConfig
**Development Config**
Network definitions
Compiler settings
Plugin configuration
end note

}
}

' External Dependencies
package "External Dependencies" {
package "node_modules" {
artifact "@openzeppelin/contracts-upgradeable" as OZContracts
artifact "hardhat" as Hardhat
artifact "ethers" as Ethers
artifact "react" as React
artifact "@chakra-ui/react" as ChakraUI

note top of OZContracts
**Security Framework**
Upgradeable contracts
Access control patterns
Battle-tested implementations
end note

}
}

' Package Dependencies - Smart Contracts
V1Contract ..> OZContracts : imports
V2Contract ..> OZContracts : imports
V1Contract ..> ProductLib : uses
V2Contract ..> ProductLib : uses

' Package Dependencies - Scripts
DeployScript ..> V1Contract : deploys
DeployV2Script ..> V2Contract : upgrades to
PopulateScript ..> ProductsCSV : reads data

' Package Dependencies - Tests
V1Tests ..> V1Contract : tests
V2Tests ..> V2Contract : tests
V2Tests ..> V1Tests : extends

' Package Dependencies - Frontend
Hook ..> ContractUtils : uses
Hook ..> Ethers : uses
App ..> Hook : uses
Admin ..> Hook : uses V2 features
ContractUtils ..> Addresses : reads config

' Package Dependencies - Configuration
HardhatConfig ..> Hardhat : configures
PackageJSON ..> React : dependencies
PackageJSON ..> ChakraUI : dependencies
PackageJSON ..> Ethers : dependencies

' Development Flow Annotations
note as DevFlow
Development Workflow

Edit contracts/ → Compile with Hardhat

Run test/ → Validate functionality

Execute scripts/ → Deploy to networks

Update frontend/ → Integrate new features

Populate data/ → Load sample products
end note

DevFlow .. contracts

note as DeploymentFlow
Deployment Pipeline

V1: deploy.js creates UUPS proxy

V2: deploy-v2.js upgrades implementation

Scripts update deployed-addresses.json

Frontend reads config automatically

Zero downtime upgrade achieved
end note

DeploymentFlow .. scripts

' Architecture Patterns
note bottom of contracts
Smart Contract Architecture
• UUPS proxy pattern for upgrades
• Library pattern for shared utilities
• OpenZeppelin security standards
• Modular and maintainable design
end note

note bottom of frontend
Frontend Architecture
• React component-based design
• Custom hooks for Web3 integration
• Responsive UI with Chakra UI
• Real-time blockchain synchronization
end note

@enduml